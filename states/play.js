// Generated by CoffeeScript 1.7.1
(function() {
  window.play_state = {
    create: function() {
      var spaceKey;
      game.physics.startSystem(Phaser.Physics.ARCADE);
      this.bird = game.add.sprite(100, 245, 'bird');
      this.bird.anchor.setTo(-0.2, 0.5);
      game.physics.arcade.enable(this.bird);
      this.bird.body.gravity.y = 1000;
      spaceKey = game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);
      spaceKey.onDown.add(this.jump, this);
      this.pipes = game.add.group();
      this.pipes.createMultiple(20, 'pipe');
      game.physics.arcade.enable(this.pipes);
      this.timer = game.time.events.loop(1500, this.addRowOfPipes, this);
      this.jumpSound = game.add.audio('jump');
      window.score = 0;
      this.labelScore = game.add.text(20, 20, "0", {
        font: "30px Arial",
        fill: "#ffffff"
      });
    },
    update: function() {
      if (this.bird.inWorld === false) {
        this.restartGame();
      }
      if (this.bird.angle < 20) {
        this.bird.angle += 1;
      }
      game.physics.arcade.overlap(this.bird, this.pipes, this.hitPipe, null, this);
    },
    jump: function() {
      if (this.bird.alive === false) {
        return;
      }
      this.bird.body.velocity.y = -350;
      game.add.tween(this.bird).to({
        angle: -20
      }, 100).start();
      this.jumpSound.play();
    },
    hitPipe: function() {
      if (this.bird.alive === false) {
        return;
      }
      this.bird.alive = false;
      game.time.events.remove(this.timer);
      this.pipes.forEachAlive(function(p) {
        p.body.velocity.x = 0;
      }, this);
    },
    restartGame: function() {
      game.time.events.remove(this.timer);
      game.input.keyboard.removeKey(Phaser.Keyboard.SPACEBAR);
      game.state.start('menu');
    },
    addOnePipe: function(x, y) {
      var pipe;
      pipe = this.pipes.getFirstDead();
      pipe.reset(x, y);
      pipe.body.velocity.x = -200;
      pipe.checkWorldBounds = true;
      pipe.outOfBoundsKill = true;
    },
    addRowOfPipes: function() {
      var hole, i, _i;
      if (this.pipes.getFirstAlive()) {
        window.score += 1;
        this.labelScore.text = window.score;
      }
      hole = Math.floor(Math.random() * 5) + 1;
      for (i = _i = 0; _i < 8; i = ++_i) {
        if (i !== hole && i !== hole + 1) {
          this.addOnePipe(400, i * 60 + 10);
        }
      }
    }
  };

}).call(this);
